image:
  repository: mirzakhani/django_boilerplate # replace with your image url
  tag: latest
  pullPolicy: IfNotPresent

ingress:
  tlsCert:
    certName: proj-api-dev-crt
    issuerRef: letsencrypt-prod
    dnsNames:
       - api-dev.<your-domain-name>
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: api-dev.<your-domain-name>
      paths:
        - /v1(/|$)(.*)
  tls:
   - secretName: proj-api-dev-crt
     hosts:
       - api-dev.<your-domain-name>

migrations:
  # NOTE!!!! When installing first time, this need to be false!!
  enabled: true
db:
  redis:
    secretName: "redis-development"
    dbHost: redis-dev-master.dev.svc.cluster.local
  postgresql:
    dbHost: postgres-dev-postgresql.dev.svc.cluster.local
    dbName: <your-db-name>
    dbUser: postgres
    dbPassSecret: postgres-dev-postgresql

application:
  allowedHosts: "api-dev.<your-domain-name>"
  djangoSetting: pro.settings.dev
  basePath: "/v1"
  staticURL: "/v1/static/"
  enableSentry: "True"
  sentryDSN: "<your-sentry-dsn>"


imagePullSecrets: []
nameOverride: ""
taskRunnerNameOverride: "celery"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
